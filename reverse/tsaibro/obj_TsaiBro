
TsaiBro:     file format elf64-x86-64


Disassembly of section .init:

00000000000005b8 <_init>:
 5b8:	48 83 ec 08          	sub    $0x8,%rsp
 5bc:	48 8b 05 25 0a 20 00 	mov    0x200a25(%rip),%rax        # 200fe8 <__gmon_start__>
 5c3:	48 85 c0             	test   %rax,%rax
 5c6:	74 02                	je     5ca <_init+0x12>
 5c8:	ff d0                	callq  *%rax
 5ca:	48 83 c4 08          	add    $0x8,%rsp
 5ce:	c3                   	retq   

Disassembly of section .plt:

00000000000005d0 <.plt>:
 5d0:	ff 35 d2 09 20 00    	pushq  0x2009d2(%rip)        # 200fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
 5d6:	ff 25 d4 09 20 00    	jmpq   *0x2009d4(%rip)        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
 5dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005e0 <puts@plt>:
 5e0:	ff 25 d2 09 20 00    	jmpq   *0x2009d2(%rip)        # 200fb8 <puts@GLIBC_2.2.5>
 5e6:	68 00 00 00 00       	pushq  $0x0
 5eb:	e9 e0 ff ff ff       	jmpq   5d0 <.plt>

00000000000005f0 <strlen@plt>:
 5f0:	ff 25 ca 09 20 00    	jmpq   *0x2009ca(%rip)        # 200fc0 <strlen@GLIBC_2.2.5>
 5f6:	68 01 00 00 00       	pushq  $0x1
 5fb:	e9 d0 ff ff ff       	jmpq   5d0 <.plt>

0000000000000600 <__stack_chk_fail@plt>:
 600:	ff 25 c2 09 20 00    	jmpq   *0x2009c2(%rip)        # 200fc8 <__stack_chk_fail@GLIBC_2.4>
 606:	68 02 00 00 00       	pushq  $0x2
 60b:	e9 c0 ff ff ff       	jmpq   5d0 <.plt>

0000000000000610 <printf@plt>:
 610:	ff 25 ba 09 20 00    	jmpq   *0x2009ba(%rip)        # 200fd0 <printf@GLIBC_2.2.5>
 616:	68 03 00 00 00       	pushq  $0x3
 61b:	e9 b0 ff ff ff       	jmpq   5d0 <.plt>

Disassembly of section .plt.got:

0000000000000620 <__cxa_finalize@plt>:
 620:	ff 25 d2 09 20 00    	jmpq   *0x2009d2(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 626:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000630 <_start>:
 630:	31 ed                	xor    %ebp,%ebp
 632:	49 89 d1             	mov    %rdx,%r9
 635:	5e                   	pop    %rsi
 636:	48 89 e2             	mov    %rsp,%rdx
 639:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 63d:	50                   	push   %rax
 63e:	54                   	push   %rsp
 63f:	4c 8d 05 8a 02 00 00 	lea    0x28a(%rip),%r8        # 8d0 <__libc_csu_fini>
 646:	48 8d 0d 13 02 00 00 	lea    0x213(%rip),%rcx        # 860 <__libc_csu_init>
 64d:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 73a <main>
 654:	ff 15 86 09 20 00    	callq  *0x200986(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 65a:	f4                   	hlt    
 65b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000660 <deregister_tm_clones>:
 660:	48 8d 3d f9 09 20 00 	lea    0x2009f9(%rip),%rdi        # 201060 <__TMC_END__>
 667:	55                   	push   %rbp
 668:	48 8d 05 f1 09 20 00 	lea    0x2009f1(%rip),%rax        # 201060 <__TMC_END__>
 66f:	48 39 f8             	cmp    %rdi,%rax
 672:	48 89 e5             	mov    %rsp,%rbp
 675:	74 19                	je     690 <deregister_tm_clones+0x30>
 677:	48 8b 05 5a 09 20 00 	mov    0x20095a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 67e:	48 85 c0             	test   %rax,%rax
 681:	74 0d                	je     690 <deregister_tm_clones+0x30>
 683:	5d                   	pop    %rbp
 684:	ff e0                	jmpq   *%rax
 686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 68d:	00 00 00 
 690:	5d                   	pop    %rbp
 691:	c3                   	retq   
 692:	0f 1f 40 00          	nopl   0x0(%rax)
 696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 69d:	00 00 00 

00000000000006a0 <register_tm_clones>:
 6a0:	48 8d 3d b9 09 20 00 	lea    0x2009b9(%rip),%rdi        # 201060 <__TMC_END__>
 6a7:	48 8d 35 b2 09 20 00 	lea    0x2009b2(%rip),%rsi        # 201060 <__TMC_END__>
 6ae:	55                   	push   %rbp
 6af:	48 29 fe             	sub    %rdi,%rsi
 6b2:	48 89 e5             	mov    %rsp,%rbp
 6b5:	48 c1 fe 03          	sar    $0x3,%rsi
 6b9:	48 89 f0             	mov    %rsi,%rax
 6bc:	48 c1 e8 3f          	shr    $0x3f,%rax
 6c0:	48 01 c6             	add    %rax,%rsi
 6c3:	48 d1 fe             	sar    %rsi
 6c6:	74 18                	je     6e0 <register_tm_clones+0x40>
 6c8:	48 8b 05 21 09 20 00 	mov    0x200921(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 6cf:	48 85 c0             	test   %rax,%rax
 6d2:	74 0c                	je     6e0 <register_tm_clones+0x40>
 6d4:	5d                   	pop    %rbp
 6d5:	ff e0                	jmpq   *%rax
 6d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6de:	00 00 
 6e0:	5d                   	pop    %rbp
 6e1:	c3                   	retq   
 6e2:	0f 1f 40 00          	nopl   0x0(%rax)
 6e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6ed:	00 00 00 

00000000000006f0 <__do_global_dtors_aux>:
 6f0:	80 3d 69 09 20 00 00 	cmpb   $0x0,0x200969(%rip)        # 201060 <__TMC_END__>
 6f7:	75 2f                	jne    728 <__do_global_dtors_aux+0x38>
 6f9:	48 83 3d f7 08 20 00 	cmpq   $0x0,0x2008f7(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 700:	00 
 701:	55                   	push   %rbp
 702:	48 89 e5             	mov    %rsp,%rbp
 705:	74 0c                	je     713 <__do_global_dtors_aux+0x23>
 707:	48 8b 3d fa 08 20 00 	mov    0x2008fa(%rip),%rdi        # 201008 <__dso_handle>
 70e:	e8 0d ff ff ff       	callq  620 <__cxa_finalize@plt>
 713:	e8 48 ff ff ff       	callq  660 <deregister_tm_clones>
 718:	c6 05 41 09 20 00 01 	movb   $0x1,0x200941(%rip)        # 201060 <__TMC_END__>
 71f:	5d                   	pop    %rbp
 720:	c3                   	retq   
 721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 728:	f3 c3                	repz retq 
 72a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000730 <frame_dummy>:
 730:	55                   	push   %rbp
 731:	48 89 e5             	mov    %rsp,%rbp
 734:	5d                   	pop    %rbp
 735:	e9 66 ff ff ff       	jmpq   6a0 <register_tm_clones>

000000000000073a <main>:
 73a:	55                   	push   %rbp
 73b:	48 89 e5             	mov    %rsp,%rbp
 73e:	53                   	push   %rbx
 73f:	48 83 ec 38          	sub    $0x38,%rsp
 743:	89 7d cc             	mov    %edi,-0x34(%rbp)
 746:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
 74a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 751:	00 00 
 753:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 757:	31 c0                	xor    %eax,%eax
 759:	83 7d cc 01          	cmpl   $0x1,-0x34(%rbp)
 75d:	75 1b                	jne    77a <main+0x40>
 75f:	48 8d 3d 82 01 00 00 	lea    0x182(%rip),%rdi        # 8e8 <_IO_stdin_used+0x8>
 766:	b8 00 00 00 00       	mov    $0x0,%eax
 76b:	e8 a0 fe ff ff       	callq  610 <printf@plt>
 770:	b8 00 00 00 00       	mov    $0x0,%eax
 775:	e9 c8 00 00 00       	jmpq   842 <main+0x108>
 77a:	48 8d 3d 7f 01 00 00 	lea    0x17f(%rip),%rdi        # 900 <_IO_stdin_used+0x20>
 781:	e8 5a fe ff ff       	callq  5e0 <puts@plt>
 786:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
 78d:	e9 89 00 00 00       	jmpq   81b <main+0xe1>
 792:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
 799:	eb 76                	jmp    811 <main+0xd7>
 79b:	8b 45 d8             	mov    -0x28(%rbp),%eax
 79e:	48 63 d0             	movslq %eax,%rdx
 7a1:	48 8d 05 78 08 20 00 	lea    0x200878(%rip),%rax        # 201020 <table>
 7a8:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
 7ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 7b0:	48 83 c0 08          	add    $0x8,%rax
 7b4:	48 8b 08             	mov    (%rax),%rcx
 7b7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 7ba:	48 98                	cltq   
 7bc:	48 01 c8             	add    %rcx,%rax
 7bf:	0f b6 00             	movzbl (%rax),%eax
 7c2:	38 c2                	cmp    %al,%dl
 7c4:	75 47                	jne    80d <main+0xd3>
 7c6:	8b 45 d8             	mov    -0x28(%rbp),%eax
 7c9:	99                   	cltd   
 7ca:	c1 ea 1d             	shr    $0x1d,%edx
 7cd:	01 d0                	add    %edx,%eax
 7cf:	83 e0 07             	and    $0x7,%eax
 7d2:	29 d0                	sub    %edx,%eax
 7d4:	8d 50 01             	lea    0x1(%rax),%edx
 7d7:	8b 45 d8             	mov    -0x28(%rbp),%eax
 7da:	8d 48 07             	lea    0x7(%rax),%ecx
 7dd:	85 c0                	test   %eax,%eax
 7df:	0f 48 c1             	cmovs  %ecx,%eax
 7e2:	c1 f8 03             	sar    $0x3,%eax
 7e5:	83 c0 01             	add    $0x1,%eax
 7e8:	4c 8d 05 62 01 00 00 	lea    0x162(%rip),%r8        # 951 <_IO_stdin_used+0x71>
 7ef:	89 d1                	mov    %edx,%ecx
 7f1:	48 8d 15 65 01 00 00 	lea    0x165(%rip),%rdx        # 95d <_IO_stdin_used+0x7d>
 7f8:	89 c6                	mov    %eax,%esi
 7fa:	48 8d 3d 67 01 00 00 	lea    0x167(%rip),%rdi        # 968 <_IO_stdin_used+0x88>
 801:	b8 00 00 00 00       	mov    $0x0,%eax
 806:	e8 05 fe ff ff       	callq  610 <printf@plt>
 80b:	eb 0a                	jmp    817 <main+0xdd>
 80d:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
 811:	83 7d d8 3f          	cmpl   $0x3f,-0x28(%rbp)
 815:	7e 84                	jle    79b <main+0x61>
 817:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
 81b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 81e:	48 63 d8             	movslq %eax,%rbx
 821:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 825:	48 83 c0 08          	add    $0x8,%rax
 829:	48 8b 00             	mov    (%rax),%rax
 82c:	48 89 c7             	mov    %rax,%rdi
 82f:	e8 bc fd ff ff       	callq  5f0 <strlen@plt>
 834:	48 39 c3             	cmp    %rax,%rbx
 837:	0f 82 55 ff ff ff    	jb     792 <main+0x58>
 83d:	b8 00 00 00 00       	mov    $0x0,%eax
 842:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
 846:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
 84d:	00 00 
 84f:	74 05                	je     856 <main+0x11c>
 851:	e8 aa fd ff ff       	callq  600 <__stack_chk_fail@plt>
 856:	48 83 c4 38          	add    $0x38,%rsp
 85a:	5b                   	pop    %rbx
 85b:	5d                   	pop    %rbp
 85c:	c3                   	retq   
 85d:	0f 1f 00             	nopl   (%rax)

0000000000000860 <__libc_csu_init>:
 860:	41 57                	push   %r15
 862:	41 56                	push   %r14
 864:	49 89 d7             	mov    %rdx,%r15
 867:	41 55                	push   %r13
 869:	41 54                	push   %r12
 86b:	4c 8d 25 2e 05 20 00 	lea    0x20052e(%rip),%r12        # 200da0 <__frame_dummy_init_array_entry>
 872:	55                   	push   %rbp
 873:	48 8d 2d 2e 05 20 00 	lea    0x20052e(%rip),%rbp        # 200da8 <__init_array_end>
 87a:	53                   	push   %rbx
 87b:	41 89 fd             	mov    %edi,%r13d
 87e:	49 89 f6             	mov    %rsi,%r14
 881:	4c 29 e5             	sub    %r12,%rbp
 884:	48 83 ec 08          	sub    $0x8,%rsp
 888:	48 c1 fd 03          	sar    $0x3,%rbp
 88c:	e8 27 fd ff ff       	callq  5b8 <_init>
 891:	48 85 ed             	test   %rbp,%rbp
 894:	74 20                	je     8b6 <__libc_csu_init+0x56>
 896:	31 db                	xor    %ebx,%ebx
 898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 89f:	00 
 8a0:	4c 89 fa             	mov    %r15,%rdx
 8a3:	4c 89 f6             	mov    %r14,%rsi
 8a6:	44 89 ef             	mov    %r13d,%edi
 8a9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 8ad:	48 83 c3 01          	add    $0x1,%rbx
 8b1:	48 39 dd             	cmp    %rbx,%rbp
 8b4:	75 ea                	jne    8a0 <__libc_csu_init+0x40>
 8b6:	48 83 c4 08          	add    $0x8,%rsp
 8ba:	5b                   	pop    %rbx
 8bb:	5d                   	pop    %rbp
 8bc:	41 5c                	pop    %r12
 8be:	41 5d                	pop    %r13
 8c0:	41 5e                	pop    %r14
 8c2:	41 5f                	pop    %r15
 8c4:	c3                   	retq   
 8c5:	90                   	nop
 8c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 8cd:	00 00 00 

00000000000008d0 <__libc_csu_fini>:
 8d0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000000008d4 <_fini>:
 8d4:	48 83 ec 08          	sub    $0x8,%rsp
 8d8:	48 83 c4 08          	add    $0x8,%rsp
 8dc:	c3                   	retq   
